name: Build and Release Binaries

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.13.1'

    - name: Build frontend
      run: |
        printf "Building studio based on openapi...\n"
        mkdir -p assets
        git submodule update --init --recursive
        cd studio && yarn && yarn openapi || true
        cd studio && yarn build:embed && cd ..

    - name: Build with messense/rust-musl-cross
      if: matrix.arch == 'x86_64'
      run: |
        docker run --rm -v "${{ github.workspace }}:/home/rust/src" messense/rust-musl-cross:x86_64-musl cargo build --release --target x86_64-unknown-linux-musl

    - name: Build with messense/rust-musl-cross
      if: matrix.arch == 'arm64'
      run: |
        docker run --rm -v "${{ github.workspace }}:/home/rust/src" messense/rust-musl-cross:aarch64-musl cargo build --release --target aarch64-unknown-linux-musl

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (biomedgps)
      uses: actions/upload-release-asset@v1
      if: matrix.arch == 'x86_64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/x86_64-unknown-linux-musl/biomedgps
        asset_name: biomedgps-x86_64-unknown-linux-musl
        asset_content_type: application/octet-stream
        draft: ${{ github.event_name != 'workflow_dispatch' }}

    - name: Upload Release Asset (biomedgps-cli)
      uses: actions/upload-release-asset@v1
      if: matrix.arch == 'x86_64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/x86_64-unknown-linux-musl/biomedgps-cli
        asset_name: biomedgps-cli-x86_64-unknown-linux-musl
        asset_content_type: application/octet-stream
        draft: ${{ github.event_name != 'workflow_dispatch' }}

    - name: Upload Release Asset (biomedgps)
      uses: actions/upload-release-asset@v1
      if: matrix.arch == 'arm64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/aarch64-unknown-linux-musl/biomedgps
        asset_name: biomedgps-aarch64-unknown-linux-musl
        asset_content_type: application/octet-stream
        draft: ${{ github.event_name != 'workflow_dispatch' }}

    - name: Upload Release Asset (biomedgps-cli)
      uses: actions/upload-release-asset@v1
      if: matrix.arch == 'arm64'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/aarch64-unknown-linux-musl/biomedgps-cli
        asset_name: biomedgps-cli-aarch64-unknown-linux-musl
        asset_content_type: application/octet-stream
        draft: ${{ github.event_name != 'workflow_dispatch' }}
