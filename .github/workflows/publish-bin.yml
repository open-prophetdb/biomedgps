name: Build and Release Binaries

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: amd64
            name: "x86_64-unknown-linux-gnu"
          - os: ubuntu-latest
            arch: arm64
            name: "aarch64-unknown-linux-gnu"
    runs-on: ${{ matrix.name }}
    
    steps:
    - uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.13.1'
        
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Build project
      run: |
        printf "Building studio based on openapi...\n"
        mkdir -p assets
        cd studio && yarn && yarn openapi || true
        cd studio && yarn build:embed && cd ..
        cargo build --release 

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (biomedgps)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/biomedgps-${{ matrix.name }}
        asset_name: biomedgps
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (biomedgps-cli)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/biomedgps-cli-${{ matrix.name }}
        asset_name: biomedgps-cli
        asset_content_type: application/octet-stream
